
kubeadm join 192.168.0.111:6443 --token tgy3c4.ypuwywnldorc0ism \
	--discovery-token-ca-cert-hash sha256:94510f8367fcc62f8e5b0a0592cb7888594774cb34f080ff3a86a1337cfca799 
	
	
	AKIAT53UZ5JHRVTVT2B2
mAQDECQtPhveujqEEGUbVGM+dRYZvIWmlR/88wPQ


270291036751.dkr.ecr.us-east-2.amazonaws.com/assignment-2

 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
 
 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


mongo --host aba5c047ef72642c3b12a0ecb93b2a7a-1325301179.ap-south-1.elb.amazonaws.com --port 27017

db.createUser({user:"testUser1", pwd:"passwd", roles:[{role:"readWrite", db:"db1"},{role:"read", db:"db2"},{ role: "listDatabase", db:"admin" }]});
docker run --rm --name mongodb -v $(pwd):/data/app --net="host" bitnami/mongodb:latest mongodump -u my-user -p 0123456 -o /data/app 
docker run --rm --name mongodb -v $(pwd):/app --net="host" bitnami/mongodb:latest mongorestore -u root -p $MONGODB_ROOT_PASSWORD /app


----connectmongodb----
kubectl exec -it example-mongodb-0 -n mongod bash
mongo -u username -p password
----createrole----
db.runCommand({createRole: "listDatabases", privileges: [{ resource: { cluster: true }, actions: ["listDatabases"]} ], roles: [] });
----create user----
db.createUser({user:"user", pwd:"passwd", roles:[{role:"readWrite", db:"db1"},{role:"read", db:"db2"},{ role: "listDatabases", db:"admin" }]});
----restore-----
docker run --rm --name mongodb -v $(pwd):/data/app --net="host" bitnami/mongodb:latest mongorestore --host localhost --port 27017 --db db1 --authenticationDatabase admin
----backup------
docker run --rm --name mongodb -v $(pwd):/data/app --net="host" bitnami/mongodb:latest mongodump --host localhost --port 27017 --db db1 --authenticationDatabase admin

helm install mongodb bitnami/mongodb --namespace uber-mongo --set replicaSet.enabled=true --set auth.enabled=false --set externalAccess.enabled=true --set service.type=LoadBalancer

